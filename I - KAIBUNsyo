#define fast std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> iv;
typedef vector<ll> llv;
#define el "\n"
#define all(x) (x).begin(),(x).end()
#define sz(s) (int)(s).size()
const int N = 200009;
const int mod = 1000000007;
bool visited[N];
vector<int> e;
int n,m;
vector<multiset<int>> adj(N);
int dfs(int node){
    visited[node] = 1;
    int ans = 1;
    for (auto &i: adj[node]) {
        if(!visited[i])
            ans+= dfs(i);
    }
    return ans;
}
void solve() {
    cin>>n;
    int arr[n];
    for (int i = 0; i < n; ++i) {
        cin>>arr[i];
    }
    for (int i = 0; i < n/2; ++i) {
        if(arr[i] != arr[n - i - 1]){
            adj[arr[i]].emplace(arr[n - i - 1]);
            adj[arr[n - i - 1]].emplace(arr[i]);
        }
    }
    int ans = 0;
    for (int i = 0; i < n; ++i) {
        if(!visited[arr[i]])
            ans+=dfs(arr[i]) - 1;
    }
    cout<<ans<<el;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("Input.txt","r",stdin);
    freopen("Output.txt","w",stdout);
#endif
    fast;
    int t = 1;
    //cin >> t;
    while (t--)
        solve();
    return 0;
}
