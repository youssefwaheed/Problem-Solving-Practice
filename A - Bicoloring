#define fast std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> iv;
typedef vector<ll> llv;
#define el "\n"
#define all(x) (x).begin(),(x).end()
#define sz(s) (int)(s).size()
const int N = 201;
const int mod = 1000000007;
vector<bool> visited;
vector<bool> color;
vector<vector<int>> adj;
int n,m;
/********************************************************************/
bool can = true;
void dfs(int node,int c){
    visited[node] = 1;
    color[node] = c;
    for (auto &i : adj[node]) {
        if(!visited[i]){
            dfs(i,!c);
        }
        else if(color[i] == c){
            can = false;
            return;
        }
    }
}
void solve() {
    while (true) {
        can = true;
        cin >> n;
        if (n == 0)
            return;
        color = vector<bool>(n+1);
        visited = vector<bool>(n+1);
        adj = vector<vector<int>>(n+1);
        cin >> m;
        for (int i = 0; i < m; ++i) {
            int l, r;
            cin >> l >> r;
            adj[l].emplace_back(r);
            adj[r].emplace_back(l);
        }
        for (int i = 0; i < n; ++i) {
            if(!visited[i])
                dfs(i,1);
            if(!can)break;
        }
        cout<<(can ? "BICOLORABLE." : "NOT BICOLORABLE.")<<el;
    }
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("Input.txt","r",stdin);
    freopen("Output.txt","w",stdout);
#endif
    fast;
    int t = 1;
    //cin >> t;
    while (t--)
        solve();
    return 0;
}
