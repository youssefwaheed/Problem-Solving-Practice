#define fast std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> iv;
typedef vector<ll> llv;
#define el "\n"
#define all(x) (x).begin(),(x).end()
#define sz(s) (int)(s).size()
const int N = 201;
const int mod = 1000000007;
int n,m;
/********************************************************************/
bool cycle = false;
ll x = 0;
void dfs(int node,vector<iv> &adj,iv &visited){
    x++;
    visited[node] = 1;
    for (int i : adj[node]) {
        if(!visited[i])dfs(i,adj,visited);
    }
}
void solve(){
    x = 0;
    cin>>n>>m;
    vector<iv> adj(n+1);
    vector<int> visited(n+1);
    for (int i = 1; i <= m; ++i) {
        int u,v; cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for (int i = 1; i <= n ; ++i) {
        if(visited[i] == 0){
            x = 0;
            dfs(i,adj,visited);
            ll y = sz(adj[i]) + 1;
            y = (y * (y-1))/2;
            x = (x * (x-1)) / 2;
            if(x != y){
                cout<<"NO"<<el;
                return;
            }
            for (int j : adj[i]) {
                visited[j] = sz(adj[i]);
            }
        }
        else if(visited[i] != sz(adj[i])){
            cout<<"NO"<<el;
            return;
        }
    }
    cout<<"YES"<<el;
}
int main() {
#ifndef ONLINE_JUDGE
    freopen("Input.txt","r",stdin);
    auto _clock_start = chrono::high_resolution_clock::now();
    freopen("Output.txt","w",stdout);
#endif
    fast;
    int t = 1;
    //cin >> t;
    while (t--)
        solve();
    return 0;

}
