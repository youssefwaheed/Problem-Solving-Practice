#define fast std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> iv;
typedef vector<ll> llv;
#define el "\n"
#define all(x) (x).begin(),(x).end()
#define sz(s) (int)(s).size()
const int N = (int)2e5+5;
ll lcm(ll x,ll y){
    return y/__gcd(x,y) * x;
}
void solve() {
    int n;
    cin>>n;
    string s;
    cin>>s;
    ll ans = 0;
    //we will generate all supstrings
    //if neg - pos == 0 then it is balanced so we count it
    //other wise if neg > pos and the difrance is muliable of 3 the we can
    //turn 2 of them to + and it become balanced
    for (int i = 0; i < n; ++i) {
        int pos = 0 , neg = 0;
        for (int j = i; j < n; ++j) {
            pos+=(s[j] == '+');
            neg+=(s[j] == '-');
            if(neg>=pos && (neg-pos) % 3 == 0)
                ans++;
        }
    }
    cout<<ans<<el;
}
int main() {
    fast;
    int t = 1;
    cin >> t;
    while (t--)
        solve();
    return 0;
}
